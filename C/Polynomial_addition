#include <stdio.h>
#include <stdlib.h> 

struct node {
    float coeff; 
    int exp; 
    struct node* link;
};

struct node* insert(struct node* head, float co, int ex) 
{
    struct node* R; 
    struct node* nw = malloc(sizeof(struct node)); 
    nw->coeff = co; 
    nw->exp = ex; 
    nw->link = NULL;

    if(head == NULL || ex > head->exp) 
    {
        nw->link = head; 
        head = nw; 
    }
    else 
    { 
        R = head; 
        while(R->link != NULL && R->link->exp >= ex) 
            R = R->link;  
        nw->link = R->link; 
        R->link = nw; 
    }
    return head; 
}

struct node* create(struct node* head)
{ 
    int n, i; 
    float coeff; 
    int exp; 

    printf("Enter the number of terms: "); 
    scanf("%d", &n); 

    for(i=0; i<n; i++) 
    {
        printf("Enter the coefficient for term %d: ", i+1);
        scanf("%f", &coeff); 

        printf("Enter the exponent for term %d: ", i+1); 
        scanf("%d", &exp); 

        head = insert(head, coeff, exp); 
    }
    return head; 
}

void print(struct node* head)
{ 
    if(head == NULL) 
        printf("No Polynomial."); 
    else {
        struct node* temp = head; 
        while(temp != NULL)
        {
            printf("(%.1fx^%d)", temp->coeff, temp->exp); 
            temp = temp->link; 
            if(temp!=NULL) 
                printf(" + "); 
            else printf("\n");
        }
    }
}

void polyAdd(struct node* head1, struct node* head2)
{ 
    struct node* ptr1 = head1; 
    struct node* ptr2 = head2; 
    struct node* head3 = NULL; 
    while(ptr1!=NULL && ptr2!=NULL)
    { 
        if(ptr1->exp == ptr2->exp)
        {
            head3 = insert(head3, ptr1->coeff+ptr2->coeff, ptr1->exp); 
            ptr1 = ptr1->link; 
            ptr2 = ptr2->link;
        } 
        else if(ptr1->exp > ptr2->exp)
        {
            head3 = insert(head3, ptr1->coeff, ptr1->exp); 
            ptr1 = ptr1->link; 
        } 
        else if(ptr1->exp < ptr2->exp)
        {
         head3 = insert(head3, ptr2->coeff, ptr2->exp); 
         ptr2 = ptr2->link; 
        }
    }

    while(ptr1!=NULL)
    {  
        head3 = insert(head3, ptr1->coeff, ptr1->exp); 
        ptr1 = ptr1->link; 
    }
    while(ptr2!=NULL) 
    {
        head3 = insert(head3, ptr2->coeff, ptr2->exp); 
        ptr2 = ptr2->link;
    } 
    printf("Added polynomial is: "); 
    print(head3);
} 

int main() 
{
    struct node* head1 = NULL; 
    struct node* head2 = NULL; 
    printf("\nEnter the First polynomial\n "); 
    head1 = create(head1); 
    printf("\nEnter the second polynomial\n "); 
    head2 = create(head2); 

    polyAdd(head1, head2); 
    return 0; 

}
